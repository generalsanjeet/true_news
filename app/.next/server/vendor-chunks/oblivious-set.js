"use strict";
/*
 * ATTENTION: An "eval-source-map" devtool has been used.
 * This devtool is neither made for production nor for readable output files.
 * It uses "eval()" calls to create a separate source file with attached SourceMaps in the browser devtools.
 * If you are trying to read the output file, select a different devtool (https://webpack.js.org/configuration/devtool/)
 * or disable the default devtool with "devtool: false".
 * If you are looking for production-ready output files, see mode: "production" (https://webpack.js.org/configuration/mode/).
 */
exports.id = "vendor-chunks/oblivious-set";
exports.ids = ["vendor-chunks/oblivious-set"];
exports.modules = {

/***/ "(ssr)/./node_modules/oblivious-set/dist/lib/index.js":
/*!******************************************************!*\
  !*** ./node_modules/oblivious-set/dist/lib/index.js ***!
  \******************************************************/
/***/ ((__unused_webpack_module, exports) => {

eval("\nObject.defineProperty(exports, \"__esModule\", ({ value: true }));\nexports.now = exports.removeTooOldValues = exports.ObliviousSet = void 0;\n/**\n * this is a set which automatically forgets\n * a given entry when a new entry is set and the ttl\n * of the old one is over\n */\nvar ObliviousSet = /** @class */ (function () {\n    function ObliviousSet(ttl) {\n        this.ttl = ttl;\n        this.map = new Map();\n        /**\n         * Creating calls to setTimeout() is expensive,\n         * so we only do that if there is not timeout already open.\n         */\n        this._to = false;\n    }\n    ObliviousSet.prototype.has = function (value) {\n        return this.map.has(value);\n    };\n    ObliviousSet.prototype.add = function (value) {\n        var _this = this;\n        this.map.set(value, now());\n        /**\n         * When a new value is added,\n         * start the cleanup at the next tick\n         * to not block the cpu for more important stuff\n         * that might happen.\n         */\n        if (!this._to) {\n            this._to = true;\n            setTimeout(function () {\n                _this._to = false;\n                removeTooOldValues(_this);\n            }, 0);\n        }\n    };\n    ObliviousSet.prototype.clear = function () {\n        this.map.clear();\n    };\n    return ObliviousSet;\n}());\nexports.ObliviousSet = ObliviousSet;\n/**\n * Removes all entries from the set\n * where the TTL has expired\n */\nfunction removeTooOldValues(obliviousSet) {\n    var olderThen = now() - obliviousSet.ttl;\n    var iterator = obliviousSet.map[Symbol.iterator]();\n    /**\n     * Because we can assume the new values are added at the bottom,\n     * we start from the top and stop as soon as we reach a non-too-old value.\n     */\n    while (true) {\n        var next = iterator.next().value;\n        if (!next) {\n            return; // no more elements\n        }\n        var value = next[0];\n        var time = next[1];\n        if (time < olderThen) {\n            obliviousSet.map.delete(value);\n        }\n        else {\n            // We reached a value that is not old enough\n            return;\n        }\n    }\n}\nexports.removeTooOldValues = removeTooOldValues;\nfunction now() {\n    return new Date().getTime();\n}\nexports.now = now;\n//# sourceMappingURL=index.js.map//# sourceURL=[module]\n//# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJmaWxlIjoiKHNzcikvLi9ub2RlX21vZHVsZXMvb2JsaXZpb3VzLXNldC9kaXN0L2xpYi9pbmRleC5qcyIsIm1hcHBpbmdzIjoiQUFBYTtBQUNiLDhDQUE2QyxFQUFFLGFBQWEsRUFBQztBQUM3RCxXQUFXLEdBQUcsMEJBQTBCLEdBQUcsb0JBQW9CO0FBQy9EO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQSxhQUFhO0FBQ2I7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0EsQ0FBQztBQUNELG9CQUFvQjtBQUNwQjtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0Esb0JBQW9CO0FBQ3BCO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBO0FBQ0E7QUFDQTtBQUNBLDBCQUEwQjtBQUMxQjtBQUNBO0FBQ0E7QUFDQSxXQUFXO0FBQ1giLCJzb3VyY2VzIjpbIndlYnBhY2s6Ly8vLi9ub2RlX21vZHVsZXMvb2JsaXZpb3VzLXNldC9kaXN0L2xpYi9pbmRleC5qcz9kMjAzIl0sInNvdXJjZXNDb250ZW50IjpbIlwidXNlIHN0cmljdFwiO1xuT2JqZWN0LmRlZmluZVByb3BlcnR5KGV4cG9ydHMsIFwiX19lc01vZHVsZVwiLCB7IHZhbHVlOiB0cnVlIH0pO1xuZXhwb3J0cy5ub3cgPSBleHBvcnRzLnJlbW92ZVRvb09sZFZhbHVlcyA9IGV4cG9ydHMuT2JsaXZpb3VzU2V0ID0gdm9pZCAwO1xuLyoqXG4gKiB0aGlzIGlzIGEgc2V0IHdoaWNoIGF1dG9tYXRpY2FsbHkgZm9yZ2V0c1xuICogYSBnaXZlbiBlbnRyeSB3aGVuIGEgbmV3IGVudHJ5IGlzIHNldCBhbmQgdGhlIHR0bFxuICogb2YgdGhlIG9sZCBvbmUgaXMgb3ZlclxuICovXG52YXIgT2JsaXZpb3VzU2V0ID0gLyoqIEBjbGFzcyAqLyAoZnVuY3Rpb24gKCkge1xuICAgIGZ1bmN0aW9uIE9ibGl2aW91c1NldCh0dGwpIHtcbiAgICAgICAgdGhpcy50dGwgPSB0dGw7XG4gICAgICAgIHRoaXMubWFwID0gbmV3IE1hcCgpO1xuICAgICAgICAvKipcbiAgICAgICAgICogQ3JlYXRpbmcgY2FsbHMgdG8gc2V0VGltZW91dCgpIGlzIGV4cGVuc2l2ZSxcbiAgICAgICAgICogc28gd2Ugb25seSBkbyB0aGF0IGlmIHRoZXJlIGlzIG5vdCB0aW1lb3V0IGFscmVhZHkgb3Blbi5cbiAgICAgICAgICovXG4gICAgICAgIHRoaXMuX3RvID0gZmFsc2U7XG4gICAgfVxuICAgIE9ibGl2aW91c1NldC5wcm90b3R5cGUuaGFzID0gZnVuY3Rpb24gKHZhbHVlKSB7XG4gICAgICAgIHJldHVybiB0aGlzLm1hcC5oYXModmFsdWUpO1xuICAgIH07XG4gICAgT2JsaXZpb3VzU2V0LnByb3RvdHlwZS5hZGQgPSBmdW5jdGlvbiAodmFsdWUpIHtcbiAgICAgICAgdmFyIF90aGlzID0gdGhpcztcbiAgICAgICAgdGhpcy5tYXAuc2V0KHZhbHVlLCBub3coKSk7XG4gICAgICAgIC8qKlxuICAgICAgICAgKiBXaGVuIGEgbmV3IHZhbHVlIGlzIGFkZGVkLFxuICAgICAgICAgKiBzdGFydCB0aGUgY2xlYW51cCBhdCB0aGUgbmV4dCB0aWNrXG4gICAgICAgICAqIHRvIG5vdCBibG9jayB0aGUgY3B1IGZvciBtb3JlIGltcG9ydGFudCBzdHVmZlxuICAgICAgICAgKiB0aGF0IG1pZ2h0IGhhcHBlbi5cbiAgICAgICAgICovXG4gICAgICAgIGlmICghdGhpcy5fdG8pIHtcbiAgICAgICAgICAgIHRoaXMuX3RvID0gdHJ1ZTtcbiAgICAgICAgICAgIHNldFRpbWVvdXQoZnVuY3Rpb24gKCkge1xuICAgICAgICAgICAgICAgIF90aGlzLl90byA9IGZhbHNlO1xuICAgICAgICAgICAgICAgIHJlbW92ZVRvb09sZFZhbHVlcyhfdGhpcyk7XG4gICAgICAgICAgICB9LCAwKTtcbiAgICAgICAgfVxuICAgIH07XG4gICAgT2JsaXZpb3VzU2V0LnByb3RvdHlwZS5jbGVhciA9IGZ1bmN0aW9uICgpIHtcbiAgICAgICAgdGhpcy5tYXAuY2xlYXIoKTtcbiAgICB9O1xuICAgIHJldHVybiBPYmxpdmlvdXNTZXQ7XG59KCkpO1xuZXhwb3J0cy5PYmxpdmlvdXNTZXQgPSBPYmxpdmlvdXNTZXQ7XG4vKipcbiAqIFJlbW92ZXMgYWxsIGVudHJpZXMgZnJvbSB0aGUgc2V0XG4gKiB3aGVyZSB0aGUgVFRMIGhhcyBleHBpcmVkXG4gKi9cbmZ1bmN0aW9uIHJlbW92ZVRvb09sZFZhbHVlcyhvYmxpdmlvdXNTZXQpIHtcbiAgICB2YXIgb2xkZXJUaGVuID0gbm93KCkgLSBvYmxpdmlvdXNTZXQudHRsO1xuICAgIHZhciBpdGVyYXRvciA9IG9ibGl2aW91c1NldC5tYXBbU3ltYm9sLml0ZXJhdG9yXSgpO1xuICAgIC8qKlxuICAgICAqIEJlY2F1c2Ugd2UgY2FuIGFzc3VtZSB0aGUgbmV3IHZhbHVlcyBhcmUgYWRkZWQgYXQgdGhlIGJvdHRvbSxcbiAgICAgKiB3ZSBzdGFydCBmcm9tIHRoZSB0b3AgYW5kIHN0b3AgYXMgc29vbiBhcyB3ZSByZWFjaCBhIG5vbi10b28tb2xkIHZhbHVlLlxuICAgICAqL1xuICAgIHdoaWxlICh0cnVlKSB7XG4gICAgICAgIHZhciBuZXh0ID0gaXRlcmF0b3IubmV4dCgpLnZhbHVlO1xuICAgICAgICBpZiAoIW5leHQpIHtcbiAgICAgICAgICAgIHJldHVybjsgLy8gbm8gbW9yZSBlbGVtZW50c1xuICAgICAgICB9XG4gICAgICAgIHZhciB2YWx1ZSA9IG5leHRbMF07XG4gICAgICAgIHZhciB0aW1lID0gbmV4dFsxXTtcbiAgICAgICAgaWYgKHRpbWUgPCBvbGRlclRoZW4pIHtcbiAgICAgICAgICAgIG9ibGl2aW91c1NldC5tYXAuZGVsZXRlKHZhbHVlKTtcbiAgICAgICAgfVxuICAgICAgICBlbHNlIHtcbiAgICAgICAgICAgIC8vIFdlIHJlYWNoZWQgYSB2YWx1ZSB0aGF0IGlzIG5vdCBvbGQgZW5vdWdoXG4gICAgICAgICAgICByZXR1cm47XG4gICAgICAgIH1cbiAgICB9XG59XG5leHBvcnRzLnJlbW92ZVRvb09sZFZhbHVlcyA9IHJlbW92ZVRvb09sZFZhbHVlcztcbmZ1bmN0aW9uIG5vdygpIHtcbiAgICByZXR1cm4gbmV3IERhdGUoKS5nZXRUaW1lKCk7XG59XG5leHBvcnRzLm5vdyA9IG5vdztcbi8vIyBzb3VyY2VNYXBwaW5nVVJMPWluZGV4LmpzLm1hcCJdLCJuYW1lcyI6W10sInNvdXJjZVJvb3QiOiIifQ==\n//# sourceURL=webpack-internal:///(ssr)/./node_modules/oblivious-set/dist/lib/index.js\n");

/***/ })

};
;